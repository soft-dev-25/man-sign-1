name: Merge to Main

on:
  push:
    branches:
      - main

jobs:
  unit-tests:
    name: Run Unit Tests
    uses: ./.github/workflows/unit_test.yml

  integration-db-tests:
    name: Run Integration DB Tests
    needs: unit-tests
    uses: ./.github/workflows/integration_test.yml

  deploy-containers:
    name: Deploy application to VM
    runs-on: ubuntu-latest
    needs: integration-db-tests
    environment: secrets
    steps:
      - uses: actions/checkout@v4

      - name: Executing remote SSH commands
        uses: appleboy/ssh-action@v1.2.2
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PW: ${{ secrets.POSTGRES_PASSWORD }}
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
          BASEURL: ${{ secrets.BASEURL }}
        with:
          host: ${{ vars.VM_IP_ADDRESS }}
          username: ${{ vars.VM_USER }}
          key: ${{ secrets.VM_PRIVATE_KEY }}
          envs: POSTGRES_USER,POSTGRES_PW,VITE_API_URL,BASEURL
          script: |
            echo "Extract repository name from context"
            REPO_NAME=$(basename "${{ github.repository }}")

            echo "cd to deployment directory"
            cd ./deployment

            echo "Delete old repository"
            rm -rf "$REPO_NAME"

            echo "Clone repository"
            git clone "https://github.com/${{ github.repository }}.git"

            echo "cd to repository"
            cd "$REPO_NAME"

            echo "Ensure Docker is installed"
            docker --version

            echo "Remove existing containers"
            sudo docker compose down

            echo "Delete all local images"
            sudo docker image prune --all --force

            echo "Insert variables for building containers"
            echo "POSTGRES_USER=$POSTGRES_USER" > .env
            echo "POSTGRES_PW=$POSTGRES_PW" >> .env
            echo "VITE_API_URL=$VITE_API_URL" >> .env
            echo "BASEURL=$BASEURL" >> .env

            echo "Build containers"
            sudo docker compose --env-file .env up -d

  automated-api-tests:
    name: API testing with Postman CLI
    needs: deploy-containers
    runs-on: ubuntu-latest
    environment: secrets
    steps:
      - uses: actions/checkout@v4

      - name: Install Postman CLI
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh

      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}

      - name: Run API tests
        env:
          HOST: "http://${{ vars.VM_IP_ADDRESS }}:3000"
        run: |
          postman collection run "48703513-b9040924-18c2-450d-b42c-ebcd117e744d" --env-var "HOST=$HOST"

  e2e-playwright-tests:
    name: Run End-To-End Tests
    needs: automated-api-tests
    uses: ./.github/workflows/e2e_test.yml
    secrets:
      BASEURL: ${{ secrets.BASEURL }}
